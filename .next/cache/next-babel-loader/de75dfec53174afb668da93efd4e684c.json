{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/ziegler-dev/Desktop/PROJETOS/jobforme/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Lottie from 'react-lottie';\nimport Card from '../src/components/card';\nimport Topbar from '../src/components/Topbar';\nimport Filters from '../src/components/Filters';\nimport api from '../src/services/api';\nimport groupByAttribute from '../src/utils/groupByAttribute';\nimport searchData from '../src/utils/searchData';\nimport hiringData from '../src/assets/15563-hiring-isometric-animation (1).json';\nimport loadingData from '../src/assets/loading.json';\nexport default function Home() {\n  var _this = this;\n\n  var _useState = useState([]),\n      profiles = _useState[0],\n      setProfiles = _useState[1];\n\n  var _useState2 = useState([]),\n      showProfiles = _useState2[0],\n      setShowProfiles = _useState2[1];\n\n  var _useState3 = useState(null),\n      qtdProfiles = _useState3[0],\n      setQtdProfiles = _useState3[1];\n\n  var _useState4 = useState(\"https://forms.gle/fxWpig6SHWVhBPj26\"),\n      urlForm = _useState4[0],\n      setUrlForm = _useState4[1];\n\n  var _useState5 = useState(\"Adicionar Perfil\"),\n      addButtonText = _useState5[0],\n      setAddButtonText = _useState5[1];\n\n  var _useState6 = useState(\"Ir para Vagas\"),\n      textContextButton = _useState6[0],\n      setTextContextButton = _useState6[1];\n\n  var _useState7 = useState(false),\n      isRecruiter = _useState7[0],\n      setIsRecruiter = _useState7[1];\n\n  var _useState8 = useState('https://spreadsheets.google.com/feeds/cells/1DIOjyvCrP8wim2oedHu3SgXoD3RAZFytSnCR0xjK7e4/1/public/full?alt=json'),\n      urlFetchData = _useState8[0],\n      seturlFetchData = _useState8[1];\n\n  var _useState9 = useState(true),\n      isloading = _useState9[0],\n      setIsloading = _useState9[1];\n\n  var _useState10 = useState(null),\n      error = _useState10[0],\n      setError = _useState10[1]; // Configuration of LottieFiles\n\n\n  var hiringOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: hiringData\n  }; // Configuration of LottieFiles\n\n  var loadingOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: loadingData\n  };\n  /** \n   * The code below will find the Job position\n  */\n\n  var handlerSearchOnChange = function handlerSearchOnChange(event) {\n    var result;\n    return _regeneratorRuntime.async(function handlerSearchOnChange$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            result = searchData(profiles, event.target.value);\n            setShowProfiles(result);\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n  /** \n   * The code below will set State of App \n   * Recruiter can be added Jobs and Users can be added Profiles\n  */\n\n\n  var handlerUserchange = function handlerUserchange(event) {\n    return _regeneratorRuntime.async(function handlerUserchange$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            event.preventDefault();\n            setIsRecruiter(!isRecruiter); // fetch data of Jobs or Professional\n\n            if (!isRecruiter) {\n              seturlFetchData('https://spreadsheets.google.com/feeds/cells/17LTWWLr0rB54bQOA1Ap3zzFUPfrnCsZK2EgjgruJIwc/1/public/full?alt=json');\n              setTextContextButton('Ir para Profissionais');\n              setAddButtonText('Adicionar Vaga'); //url form for Recruiter add Jobs\n\n              setUrlForm('https://forms.gle/zBQ3xAzZVruyTdpN9');\n            } else {\n              seturlFetchData('https://spreadsheets.google.com/feeds/cells/1DIOjyvCrP8wim2oedHu3SgXoD3RAZFytSnCR0xjK7e4/1/public/full?alt=json');\n              setTextContextButton('Ir para Vagas');\n              setAddButtonText('Adicionar Perfil'); //url form for Professional add Profile\n\n              setUrlForm('https://forms.gle/fxWpig6SHWVhBPj26');\n            }\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n  /** \n   * The code below fetching data from URL.\n   * The Url will be of Profiles or Jobs\n  */\n\n\n  function fetchData(dataUrl) {\n    var response, arrayProfile, rows, data;\n    return _regeneratorRuntime.async(function fetchData$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            // initialize loading Animation\n            setIsloading(true); // get data from url\n\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(api(dataUrl));\n\n          case 3:\n            response = _context3.sent;\n            // saving in a array the response\n            arrayProfile = response.feed.entry.map(function (_ref) {\n              var gs$cell = _ref.gs$cell;\n              return {\n                value: gs$cell.inputValue,\n                row: gs$cell.row\n              };\n            }); // group the response per row from Google Spreadsheets \n\n            rows = Object.values(groupByAttribute(arrayProfile, 'row'));\n            data = rows.map(function (row) {\n              return row.map(function (element) {\n                return element.value;\n              });\n            }); // set state to app ready\n\n            setProfiles(data);\n            setShowProfiles(data);\n            setQtdProfiles(data.length - 1);\n            setIsloading(false);\n\n          case 11:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  } // Fetch data if variable isRecruiter was changed\n\n\n  useEffect(function () {\n    try {\n      fetchData(urlFetchData);\n    } catch (e) {\n      setError(e);\n    }\n  }, [isRecruiter]);\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"header-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, __jsx(Topbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }), __jsx(\"div\", {\n    className: \"hiring\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, __jsx(Lottie, {\n    className: \"lottieFile\",\n    options: hiringOptions,\n    height: \"60%\",\n    width: \"60%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }))), __jsx(\"div\", {\n    className: \"section-profile-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, __jsx(\"button\", {\n    className: \"btn-profile\",\n    onClick: handlerUserchange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, textContextButton), __jsx(\"p\", {\n    className: \"text-alert-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, isRecruiter ? 'Você está na área reservada para que os recrutadores postem suas vagas e você que é profissional pode visualizar essas vagas e se candidatar.' : 'Você está na área reservada para os profissionais, aqui você pode cadastrar o seu perfil e os recrutadores podem visualiza-los.')), __jsx(Filters, {\n    handlerOnchange: handlerSearchOnChange,\n    urlButton: urlForm,\n    handlerUserchange: handlerUserchange,\n    textButton: addButtonText,\n    textContextButton: textContextButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }), qtdProfiles > 0 && __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, __jsx(\"span\", {\n    className: \"profile-count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, \"Cadastrados: \", qtdProfiles, \" \")), isloading && __jsx(\"div\", {\n    className: \"loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  }, __jsx(Lottie, {\n    className: \"lottieFile\",\n    options: loadingOptions,\n    height: \"100%\",\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, showProfiles.length > 0 && showProfiles.map(function (profile, index) {\n    // first element form array will the Table header.\n    if (profile[0] === \"Timestamp\") {\n      return null;\n    }\n\n    return __jsx(Card, {\n      key: index,\n      className: \"profile\",\n      name: profile[2],\n      cargo: profile[3],\n      linkedin: profile[4],\n      email: profile[1],\n      cidade: profile[5],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 20\n      }\n    });\n  }), showProfiles.length === 0 && !isloading && __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 55\n    }\n  }, \"Nenhum candidato corresponde ao cargo\"))));\n}","map":{"version":3,"sources":["/Users/ziegler-dev/Desktop/PROJETOS/jobforme/pages/index.js"],"names":["React","useState","useEffect","Lottie","Card","Topbar","Filters","api","groupByAttribute","searchData","hiringData","loadingData","Home","profiles","setProfiles","showProfiles","setShowProfiles","qtdProfiles","setQtdProfiles","urlForm","setUrlForm","addButtonText","setAddButtonText","textContextButton","setTextContextButton","isRecruiter","setIsRecruiter","urlFetchData","seturlFetchData","isloading","setIsloading","error","setError","hiringOptions","loop","autoplay","animationData","loadingOptions","handlerSearchOnChange","event","result","target","value","handlerUserchange","preventDefault","fetchData","dataUrl","response","arrayProfile","feed","entry","map","gs$cell","inputValue","row","rows","Object","values","data","element","length","e","profile","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Lottie from 'react-lottie';\n\nimport Card from '../src/components/card'\nimport Topbar from '../src/components/Topbar'\nimport Filters from '../src/components/Filters'\n\nimport api from '../src/services/api'\nimport groupByAttribute from '../src/utils/groupByAttribute'\nimport searchData from '../src/utils/searchData'\n\nimport hiringData from '../src/assets/15563-hiring-isometric-animation (1).json'\nimport loadingData from '../src/assets/loading.json'\n\nexport default function Home() {\n\n  const [profiles, setProfiles] = useState([])\n  const [showProfiles, setShowProfiles] = useState([])\n  const [qtdProfiles, setQtdProfiles] = useState(null)\n  const [urlForm, setUrlForm] = useState(\"https://forms.gle/fxWpig6SHWVhBPj26\")\n  const [addButtonText, setAddButtonText] = useState(\"Adicionar Perfil\")\n  const [textContextButton, setTextContextButton] = useState(\"Ir para Vagas\")\n  const [isRecruiter, setIsRecruiter] = useState(false)\n  const [urlFetchData, seturlFetchData] = useState('https://spreadsheets.google.com/feeds/cells/1DIOjyvCrP8wim2oedHu3SgXoD3RAZFytSnCR0xjK7e4/1/public/full?alt=json')\n  const [isloading, setIsloading] = useState(true)\n  const [error, setError] = useState(null)\n\n  // Configuration of LottieFiles\n  const hiringOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: hiringData,\n\n  }\n\n  // Configuration of LottieFiles\n  const loadingOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: loadingData,\n\n  }\n\n  /** \n   * The code below will find the Job position\n  */\n  const handlerSearchOnChange = async (event) => {\n    const result = searchData(profiles, event.target.value)\n    setShowProfiles(result)\n  }\n\n  /** \n   * The code below will set State of App \n   * Recruiter can be added Jobs and Users can be added Profiles\n  */\n  const handlerUserchange = async (event) => {\n    event.preventDefault()\n\n    setIsRecruiter(!isRecruiter)\n\n    // fetch data of Jobs or Professional\n    if (!isRecruiter) {\n      seturlFetchData('https://spreadsheets.google.com/feeds/cells/17LTWWLr0rB54bQOA1Ap3zzFUPfrnCsZK2EgjgruJIwc/1/public/full?alt=json')\n      setTextContextButton('Ir para Profissionais')\n      setAddButtonText('Adicionar Vaga')\n\n      //url form for Recruiter add Jobs\n      setUrlForm('https://forms.gle/zBQ3xAzZVruyTdpN9')\n    } else {\n      seturlFetchData('https://spreadsheets.google.com/feeds/cells/1DIOjyvCrP8wim2oedHu3SgXoD3RAZFytSnCR0xjK7e4/1/public/full?alt=json')\n      setTextContextButton('Ir para Vagas')\n      setAddButtonText('Adicionar Perfil')\n      //url form for Professional add Profile\n      setUrlForm('https://forms.gle/fxWpig6SHWVhBPj26')\n    }\n\n  }\n\n  /** \n   * The code below fetching data from URL.\n   * The Url will be of Profiles or Jobs\n  */\n  async function fetchData(dataUrl) {\n    // initialize loading Animation\n    setIsloading(true)\n\n    // get data from url\n    const response = await api(dataUrl)\n\n    // saving in a array the response\n    const arrayProfile = response.feed.entry.map(({ gs$cell }) => {\n      return {\n        value: gs$cell.inputValue,\n        row: gs$cell.row\n      }\n    })\n\n    // group the response per row from Google Spreadsheets \n    let rows = Object.values(groupByAttribute(arrayProfile, 'row'))\n    let data = rows.map(row => row.map(element => element.value))\n\n    // set state to app ready\n    setProfiles(data)\n    setShowProfiles(data)\n    setQtdProfiles(data.length - 1)\n    setIsloading(false)\n\n  }\n\n  // Fetch data if variable isRecruiter was changed\n  useEffect(() => {\n    try {\n      fetchData(urlFetchData)\n    } catch (e) {\n      setError(e)\n    }\n\n  }, [isRecruiter])\n\n  return (\n    <>\n      <div>\n        <div className=\"header-page\">\n          <Topbar />\n          <div className=\"hiring\">\n            <Lottie className=\"lottieFile\" options={hiringOptions}\n              height={\"60%\"}\n              width={\"60%\"}\n            />\n          </div>\n        </div>\n        <div className=\"section-profile-user\">\n          <button className=\"btn-profile\" onClick={handlerUserchange}>{textContextButton}</button>\n          <p className=\"text-alert-section\">{isRecruiter ?\n            'Você está na área reservada para que os recrutadores postem suas vagas e você que é profissional pode visualizar essas vagas e se candidatar.'\n            : 'Você está na área reservada para os profissionais, aqui você pode cadastrar o seu perfil e os recrutadores podem visualiza-los.'\n          }</p>\n        </div>\n\n        <Filters\n          handlerOnchange={handlerSearchOnChange}\n          urlButton={urlForm}\n          handlerUserchange={handlerUserchange}\n          textButton={addButtonText}\n          textContextButton={textContextButton}\n        />\n        {qtdProfiles > 0 &&\n          <div className=\"container\">\n            <span className=\"profile-count\" >Cadastrados: {qtdProfiles} </span>\n          </div>}\n        {isloading &&\n          <div className=\"loading\">\n            <Lottie className=\"lottieFile\" options={loadingOptions}\n              height={\"100%\"}\n              width={\"100%\"}\n            />\n          </div>\n        }\n        <div className=\"container\" >\n          {showProfiles.length > 0 && showProfiles.map((profile, index) => {\n            // first element form array will the Table header.\n            if (profile[0] === \"Timestamp\") {\n              return null\n            }\n            return <Card\n              key={index}\n              className=\"profile\"\n              name={profile[2]}\n              cargo={profile[3]}\n              linkedin={profile[4]}\n              email={profile[1]}\n              cidade={profile[5]}\n            />\n          })}\n          {showProfiles.length === 0 && !isloading && <h2>Nenhum candidato corresponde ao cargo</h2>}\n        </div>\n      </div>\n    </>\n  )\n}"]},"metadata":{},"sourceType":"module"}