{"ast":null,"code":"var _jsxFileName = \"/Users/ziegler-dev/Desktop/PROJETOS/jobforme/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Lottie from 'react-lottie';\nimport Card from '../src/components/card';\nimport Topbar from '../src/components/Topbar';\nimport Filters from '../src/components/Filters';\nimport api from '../src/services/api';\nimport groupByAttribute from '../src/utils/groupByAttribute';\nimport searchData from '../src/utils/searchData';\nimport hiringData from '../src/assets/15563-hiring-isometric-animation (1).json';\nimport loadingData from '../src/assets/loading.json';\nexport default function Home() {\n  const {\n    0: profiles,\n    1: setProfiles\n  } = useState([]);\n  const {\n    0: showProfiles,\n    1: setShowProfiles\n  } = useState([]);\n  const {\n    0: qtdProfiles,\n    1: setQtdProfiles\n  } = useState(null);\n  const {\n    0: urlForm,\n    1: setUrlForm\n  } = useState(\"https://forms.gle/fxWpig6SHWVhBPj26\");\n  const {\n    0: addButtonText,\n    1: setAddButtonText\n  } = useState(\"Adicionar Perfil\");\n  const {\n    0: textContextButton,\n    1: setTextContextButton\n  } = useState(\"Ir para Vagas\");\n  const {\n    0: isRecruiter,\n    1: setIsRecruiter\n  } = useState(false);\n  const {\n    0: urlFetchData,\n    1: seturlFetchData\n  } = useState('https://spreadsheets.google.com/feeds/cells/1DIOjyvCrP8wim2oedHu3SgXoD3RAZFytSnCR0xjK7e4/1/public/full?alt=json');\n  const {\n    0: isloading,\n    1: setIsloading\n  } = useState(true);\n  const {\n    0: error,\n    1: setError\n  } = useState(null); // Configuration of LottieFiles\n\n  const hiringOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: hiringData\n  }; // Configuration of LottieFiles\n\n  const loadingOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: loadingData\n  };\n  /** \n   * The code below will find the Job position\n  */\n\n  const handlerSearchOnChange = async event => {\n    const result = searchData(profiles, event.target.value);\n    setShowProfiles(result);\n  };\n  /** \n   * The code below will set State of App \n   * Recruiter can be added Jobs and Users can be added Profiles\n  */\n\n\n  const handlerUserchange = async event => {\n    event.preventDefault();\n    setIsRecruiter(!isRecruiter); // fetch data of Jobs or Professional\n\n    if (!isRecruiter) {\n      seturlFetchData('https://spreadsheets.google.com/feeds/cells/17LTWWLr0rB54bQOA1Ap3zzFUPfrnCsZK2EgjgruJIwc/1/public/full?alt=json');\n      setTextContextButton('Ir para Profissionais');\n      setAddButtonText('Adicionar Vaga'); //url form for Recruiter add Jobs\n\n      setUrlForm('https://forms.gle/zBQ3xAzZVruyTdpN9');\n    } else {\n      seturlFetchData('https://spreadsheets.google.com/feeds/cells/1DIOjyvCrP8wim2oedHu3SgXoD3RAZFytSnCR0xjK7e4/1/public/full?alt=json');\n      setTextContextButton('Ir para Vagas');\n      setAddButtonText('Adicionar Perfil'); //url form for Professional add Profile\n\n      setUrlForm('https://forms.gle/fxWpig6SHWVhBPj26');\n    }\n  };\n  /** \n   * The code below fetching data from URL.\n   * The Url will be of Profiles or Jobs\n  */\n\n\n  async function fetchData(dataUrl) {\n    // initialize loading Animation\n    setIsloading(true); // get data from url\n\n    const response = await api(dataUrl); // saving in a array the response\n\n    const arrayProfile = response.feed.entry.map(({\n      gs$cell\n    }) => {\n      return {\n        value: gs$cell.inputValue,\n        row: gs$cell.row\n      };\n    }); // group the response per row from Google Spreadsheets \n\n    let rows = Object.values(groupByAttribute(arrayProfile, 'row'));\n    let data = rows.map(row => row.map(element => element.value)); // set state to app ready\n\n    setProfiles(data);\n    setShowProfiles(data);\n    setQtdProfiles(data.length - 1);\n    setIsloading(false);\n  } // Fetch data if variable isRecruiter was changed\n\n\n  useEffect(() => {\n    try {\n      fetchData(urlFetchData);\n    } catch (e) {\n      setError(e);\n    }\n  }, [isRecruiter]);\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"header-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, __jsx(Topbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }), __jsx(\"div\", {\n    className: \"hiring\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, __jsx(Lottie, {\n    className: \"lottieFile\",\n    options: hiringOptions,\n    height: \"60%\",\n    width: \"60%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }))), __jsx(\"div\", {\n    className: \"section-profile-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, __jsx(\"button\", {\n    className: \"btn-profile\",\n    onClick: handlerUserchange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, textContextButton), __jsx(\"p\", {\n    className: \"text-alert-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, isRecruiter ? 'Você está na área reservada para que os recrutadores postem suas vagas e você que é profissional pode visualizar essas vagas e se candidatar.' : 'Você está na área reservada para os profissionais, aqui você pode cadastrar o seu perfil e os recrutadores podem visualiza-los.')), __jsx(Filters, {\n    handlerOnchange: handlerSearchOnChange,\n    urlButton: urlForm,\n    handlerUserchange: handlerUserchange,\n    textButton: addButtonText,\n    textContextButton: textContextButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }), qtdProfiles > 0 && __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, __jsx(\"span\", {\n    className: \"profile-count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, \"Cadastrados: \", qtdProfiles, \" \")), isloading && __jsx(\"div\", {\n    className: \"loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  }, __jsx(Lottie, {\n    className: \"lottieFile\",\n    options: loadingOptions,\n    height: \"100%\",\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, showProfiles.length > 0 && showProfiles.map((profile, index) => {\n    // first element form array will the Table header.\n    if (profile[0] === \"Timestamp\") {\n      return null;\n    }\n\n    return __jsx(Card, {\n      key: index,\n      className: \"profile\",\n      name: profile[2],\n      cargo: profile[3],\n      linkedin: profile[4],\n      email: profile[1],\n      cidade: profile[5],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 20\n      }\n    });\n  }), showProfiles.length === 0 && !isloading && __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 55\n    }\n  }, \"Nenhum candidato corresponde ao cargo\"))));\n}","map":{"version":3,"sources":["/Users/ziegler-dev/Desktop/PROJETOS/jobforme/pages/index.js"],"names":["React","useState","useEffect","Lottie","Card","Topbar","Filters","api","groupByAttribute","searchData","hiringData","loadingData","Home","profiles","setProfiles","showProfiles","setShowProfiles","qtdProfiles","setQtdProfiles","urlForm","setUrlForm","addButtonText","setAddButtonText","textContextButton","setTextContextButton","isRecruiter","setIsRecruiter","urlFetchData","seturlFetchData","isloading","setIsloading","error","setError","hiringOptions","loop","autoplay","animationData","loadingOptions","handlerSearchOnChange","event","result","target","value","handlerUserchange","preventDefault","fetchData","dataUrl","response","arrayProfile","feed","entry","map","gs$cell","inputValue","row","rows","Object","values","data","element","length","e","profile","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Lottie from 'react-lottie';\n\nimport Card from '../src/components/card'\nimport Topbar from '../src/components/Topbar'\nimport Filters from '../src/components/Filters'\n\nimport api from '../src/services/api'\nimport groupByAttribute from '../src/utils/groupByAttribute'\nimport searchData from '../src/utils/searchData'\n\nimport hiringData from '../src/assets/15563-hiring-isometric-animation (1).json'\nimport loadingData from '../src/assets/loading.json'\n\nexport default function Home() {\n\n  const [profiles, setProfiles] = useState([])\n  const [showProfiles, setShowProfiles] = useState([])\n  const [qtdProfiles, setQtdProfiles] = useState(null)\n  const [urlForm, setUrlForm] = useState(\"https://forms.gle/fxWpig6SHWVhBPj26\")\n  const [addButtonText, setAddButtonText] = useState(\"Adicionar Perfil\")\n  const [textContextButton, setTextContextButton] = useState(\"Ir para Vagas\")\n  const [isRecruiter, setIsRecruiter] = useState(false)\n  const [urlFetchData, seturlFetchData] = useState('https://spreadsheets.google.com/feeds/cells/1DIOjyvCrP8wim2oedHu3SgXoD3RAZFytSnCR0xjK7e4/1/public/full?alt=json')\n  const [isloading, setIsloading] = useState(true)\n  const [error, setError] = useState(null)\n\n  // Configuration of LottieFiles\n  const hiringOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: hiringData,\n\n  }\n\n  // Configuration of LottieFiles\n  const loadingOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: loadingData,\n\n  }\n\n  /** \n   * The code below will find the Job position\n  */\n  const handlerSearchOnChange = async (event) => {\n    const result = searchData(profiles, event.target.value)\n    setShowProfiles(result)\n  }\n\n  /** \n   * The code below will set State of App \n   * Recruiter can be added Jobs and Users can be added Profiles\n  */\n  const handlerUserchange = async (event) => {\n    event.preventDefault()\n\n    setIsRecruiter(!isRecruiter)\n\n    // fetch data of Jobs or Professional\n    if (!isRecruiter) {\n      seturlFetchData('https://spreadsheets.google.com/feeds/cells/17LTWWLr0rB54bQOA1Ap3zzFUPfrnCsZK2EgjgruJIwc/1/public/full?alt=json')\n      setTextContextButton('Ir para Profissionais')\n      setAddButtonText('Adicionar Vaga')\n\n      //url form for Recruiter add Jobs\n      setUrlForm('https://forms.gle/zBQ3xAzZVruyTdpN9')\n    } else {\n      seturlFetchData('https://spreadsheets.google.com/feeds/cells/1DIOjyvCrP8wim2oedHu3SgXoD3RAZFytSnCR0xjK7e4/1/public/full?alt=json')\n      setTextContextButton('Ir para Vagas')\n      setAddButtonText('Adicionar Perfil')\n      //url form for Professional add Profile\n      setUrlForm('https://forms.gle/fxWpig6SHWVhBPj26')\n    }\n\n  }\n\n  /** \n   * The code below fetching data from URL.\n   * The Url will be of Profiles or Jobs\n  */\n  async function fetchData(dataUrl) {\n    // initialize loading Animation\n    setIsloading(true)\n\n    // get data from url\n    const response = await api(dataUrl)\n\n    // saving in a array the response\n    const arrayProfile = response.feed.entry.map(({ gs$cell }) => {\n      return {\n        value: gs$cell.inputValue,\n        row: gs$cell.row\n      }\n    })\n\n    // group the response per row from Google Spreadsheets \n    let rows = Object.values(groupByAttribute(arrayProfile, 'row'))\n    let data = rows.map(row => row.map(element => element.value))\n\n    // set state to app ready\n    setProfiles(data)\n    setShowProfiles(data)\n    setQtdProfiles(data.length - 1)\n    setIsloading(false)\n\n  }\n\n  // Fetch data if variable isRecruiter was changed\n  useEffect(() => {\n    try {\n      fetchData(urlFetchData)\n    } catch (e) {\n      setError(e)\n    }\n\n  }, [isRecruiter])\n\n  return (\n    <>\n      <div>\n        <div className=\"header-page\">\n          <Topbar />\n          <div className=\"hiring\">\n            <Lottie className=\"lottieFile\" options={hiringOptions}\n              height={\"60%\"}\n              width={\"60%\"}\n            />\n          </div>\n        </div>\n        <div className=\"section-profile-user\">\n          <button className=\"btn-profile\" onClick={handlerUserchange}>{textContextButton}</button>\n          <p className=\"text-alert-section\">{isRecruiter ?\n            'Você está na área reservada para que os recrutadores postem suas vagas e você que é profissional pode visualizar essas vagas e se candidatar.'\n            : 'Você está na área reservada para os profissionais, aqui você pode cadastrar o seu perfil e os recrutadores podem visualiza-los.'\n          }</p>\n        </div>\n\n        <Filters\n          handlerOnchange={handlerSearchOnChange}\n          urlButton={urlForm}\n          handlerUserchange={handlerUserchange}\n          textButton={addButtonText}\n          textContextButton={textContextButton}\n        />\n        {qtdProfiles > 0 &&\n          <div className=\"container\">\n            <span className=\"profile-count\" >Cadastrados: {qtdProfiles} </span>\n          </div>}\n        {isloading &&\n          <div className=\"loading\">\n            <Lottie className=\"lottieFile\" options={loadingOptions}\n              height={\"100%\"}\n              width={\"100%\"}\n            />\n          </div>\n        }\n        <div className=\"container\" >\n          {showProfiles.length > 0 && showProfiles.map((profile, index) => {\n            // first element form array will the Table header.\n            if (profile[0] === \"Timestamp\") {\n              return null\n            }\n            return <Card\n              key={index}\n              className=\"profile\"\n              name={profile[2]}\n              cargo={profile[3]}\n              linkedin={profile[4]}\n              email={profile[1]}\n              cidade={profile[5]}\n            />\n          })}\n          {showProfiles.length === 0 && !isloading && <h2>Nenhum candidato corresponde ao cargo</h2>}\n        </div>\n      </div>\n    </>\n  )\n}"]},"metadata":{},"sourceType":"module"}