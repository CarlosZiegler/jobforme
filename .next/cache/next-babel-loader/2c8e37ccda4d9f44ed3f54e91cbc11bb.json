{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nexport default function api(url) {\n  var response;\n  return _regeneratorRuntime.async(function api$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(url));\n\n        case 2:\n          response = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 5:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["/Users/ziegler-dev/Desktop/PROJETOS/jobforme/src/services/api.js"],"names":["api","url","fetch","response","json"],"mappings":";AAAA,eAAe,SAAeA,GAAf,CAAmBC,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACYC,KAAK,CAACD,GAAD,CADjB;;AAAA;AACLE,UAAAA,QADK;AAAA;AAAA,2CAEEA,QAAQ,CAACC,IAAT,EAFF;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["export default async function api(url) {\n    const response = await fetch(url)\n    return await response.json();\n}"]},"metadata":{},"sourceType":"module"}